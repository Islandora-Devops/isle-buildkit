name: Build
on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      image:
        required: true
        type: string
      tags:
        required: true
        type: string
      contexts:
        required: false
        type: string
    outputs:
      digest:
        description: "Digest argument for Gradle"
        value: ${{ jobs.build.outputs.digest }}
      context:
        description: "Context to use in dependent images"
        value: ${{ jobs.build.outputs.context }}
    secrets:
      registry_user:
        required: true
      registry_password:
        required: true
jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      context: ${{ steps.build.outputs.context }}
    steps:
      - name: Checkout
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.1
            network=host

      - name: Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.registry_user }}
          password: ${{ secrets.registry_password }}

      - id: build
        name: Build and push
        run: |
          set -ex
          make push manifest "PROGRESS=plain" "BUILDER=${{ steps.buildx.outputs.name }}" "TARGET=${{ inputs.image }}-ci" "REPOSITORY=${{ inputs.repository }}" "TAGS=${{ inputs.tags }}" "CONTEXTS=${{ inputs.contexts }}"
          echo "digest=-Pisle.${{ inputs.image }}.digest=${{ inputs.repository }}/${{ inputs.image }}@sha256:$(cat build/${{ inputs.image }}.digest)" >> $GITHUB_OUTPUT
          echo "context=docker-image://${{ inputs.repository }}/${{ inputs.image }}@sha256:$(cat build/${{ inputs.image }}.digest)" >> $GITHUB_OUTPUT
