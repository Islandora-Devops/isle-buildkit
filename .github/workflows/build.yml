name: Build

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      image:
        required: true
        type: string
      tags:
        required: true
        type: string
      contexts:
        required: false
        type: string
    outputs:
      digest:
        description: "Digest argument for Gradle"
        value: ${{ jobs.merge.outputs.digest }}
      context:
        description: "Context to use in dependent images"
        value: ${{ jobs.merge.outputs.context }}
    secrets:
      REGISTRY_USER:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  build:
    strategy:
      matrix:
        runner: [ubuntu-24.04, ubuntu-24.04-arm]
    name: build-${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.1
            network=host

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - id: build
        name: Build and push
        run: |
          set -ex
          FIRST_TAG=$(echo "${{ inputs.tags }}" | awk '{print $1}')
          make push \
            "PROGRESS=plain" \
            "BUILDER=${{ steps.buildx.outputs.name }}" \
            "TARGET=${{ inputs.image }}-ci" \
            "REPOSITORY=${{ inputs.repository }}" \
            "TAGS=${FIRST_TAG}" \
            "CONTEXTS=${{ inputs.contexts }}"
  merge:
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.build-push-manifest.outputs.digest }}
      context: ${{ steps.build-push-manifest.outputs.context }}
    needs:
      - build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Create and push manifest list
        id: build-push-manifest
        run: |
          FIRST_TAG=$(echo "${{ inputs.tags }}" | awk '{print $1}')
          BASE_IMAGE="${{ inputs.repository }}/${{ inputs.image }}:${FIRST_TAG}"
          for TAG in ${{ inputs.tags }}; do
            IMAGE="${{ inputs.repository }}/${{ inputs.image }}:${TAG}"
            docker buildx imagetools create \
              -t "${IMAGE}" \
              "${BASE_IMAGE}-amd64" \
              "${BASE_IMAGE}-arm64"
          done

          DIGEST=$(docker buildx imagetools inspect "$IMAGE" | grep Digest | awk '{print $2}')
          echo "digest=-Pisle.${{ inputs.image }}.digest=${{ inputs.repository }}/${{ inputs.image }}@$DIGEST" >> $GITHUB_OUTPUT
          echo "context=docker-image://${{ inputs.repository }}/${{ inputs.image }}@$DIGEST" >> $GITHUB_OUTPUT
