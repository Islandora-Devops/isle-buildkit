name: Build and Push Docker Images
on:
  push:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-amd:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          # Tag is generated automatically if not specified.
          arguments: |
            build
            '-Pisle.build.tags='
            '-Pisle.build.tags.add.arch.suffix=true'
            '-Pisle.build.push.to.remote.cache=true'
            '-Pisle.build.registry=${{ secrets.REPOSITORY }}'
            '-Pisle.build.driver=docker-container'
            '-Pisle.build.load=false'
            '-Pisle.build.push=true'
            '-Pisle.build.platforms=linux/amd64'
            '-Pisle.build.registry.user=${{ secrets.REGISTRY_USER }}'
            '-Pisle.build.registry.password=${{ secrets.REGISTRY_PASS }}'
            '-Pisle.build.cache.registry.enable.export=true'
            '--info'
  build-arm:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          # Should be same as above just a different platform.
          arguments: |
            build
            '-Pisle.build.tags='
            '-Pisle.build.tags.add.arch.suffix=true'
            '-Pisle.build.push.to.remote.cache=true'
            '-Pisle.build.registry=${{ secrets.REPOSITORY }}'
            '-Pisle.build.driver=docker-container'
            '-Pisle.build.load=false'
            '-Pisle.build.push=true'
            '-Pisle.build.platforms=linux/arm64'
            '-Pisle.build.registry.user=${{ secrets.REGISTRY_USER }}'
            '-Pisle.build.registry.password=${{ secrets.REGISTRY_PASS }}'
            '-Pisle.build.cache.registry.enable.export=true'
            '--info'
  manifest:
    needs: [build-arm, build-amd]
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            manifest
            '-Pisle.build.tags='
            '-Pisle.build.tags.add.arch.suffix=true'
            '-Pisle.build.registry=${{ secrets.REPOSITORY }}'
            '-Pisle.build.driver=docker-container'
            '-Pisle.build.platforms=linux/amd64,linux/arm64'
            '-Pisle.build.registry.user=${{ secrets.REGISTRY_USER }}'
            '-Pisle.build.registry.password=${{ secrets.REGISTRY_PASS }}'
            '--info'
#  test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 360
#    steps:
#      # We need to extend the IP range of the Docker Daemon so we can create
#      # more than 31 bridge networks when performing tests.
#      - name: Extend IP range.
#        run: |
#          cat << EOF > /tmp/daemon.json
#          {
#            "default-address-pools" : [
#              {
#                "base" : "172.17.0.0/12",
#                "size" : 20
#              },
#              {
#                "base" : "192.168.0.0/16",
#                "size" : 24
#              }
#            ]
#          }
#          EOF
#          sudo cp /tmp/daemon.json /etc/docker/daemon.json
#          sudo systemctl restart docker
#      - name: Expose GitHub Runtime
#        uses: crazy-max/ghaction-github-runtime@v2
#      - name: Set TAG Environment Variable
#        run: |
#          echo "TAG=$GITHUB_REF_NAME" >> $GITHUB_ENV
#      - name: Checkout
#        uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: 11
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: |
#            test grype
#            '-Pisle.build.tags=${{ env.TAG }}'
#            '-Pisle.build.registry=${{ secrets.REPOSITORY }}'
#            '-Pisle.build.driver=docker-container'
#            '-Pisle.build.load=true'
#            '-Pisle.build.cache.s3.enable.import=true'
#            '-Pisle.build.cache.s3.enable.export=false'
#            '-Pisle.build.cache.s3.access_key_id=${{ secrets.S3_ACCESS_KEY_ID }}'
#            '-Pisle.build.cache.s3.secret_access_key=${{ secrets.S3_SECRET_ACCESS_KEY }}'
#            '--info'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/upload-artifact@v3
#        with:
#          name: Grype Reports
#          path: build/**/*-grype.*
#