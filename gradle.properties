# =============================================================================
# Gradle properties.
org.gradle.caching=true
org.gradle.parallel=true

# =============================================================================
# CI properties.

# Set to true if building in an Continous Integration environment,
# To reduce space used since the environment is ephemeral.
isCI=false

# =============================================================================
# Grype properties.
# See https://github.com/anchore/grype for in-depth explaination.

# Used to ignore specific vunerabilities.
grype.config=grype.yaml

# Only included vunerabilities that have known fixes in the report.
grype.only-fixed=false

# Upon scanning, if a severity is found at or above the given severity then the
# command will fail. The default is unset which will skip this validation.
#
# Options:
# - negligible
# - low
# - medium
# - high
# - critical
# grype.fail-on-severity=

# The format of reports generated by grype, which can be found in:
# `build/{image-name}/{image-name}-grype.{ext}`:
#
# Options:
# - table: A columnar summary (default).
# - cyclonedx: An XML report conforming to the CycloneDX 1.2 specification.
# - json: Use this to get as much information out of Grype as possible!
# - template: Lets the user specify the output format. See "Using templates" 
#             <https://github.com/anchore/grype>.
grype.format=table

# =============================================================================
# Docker properties.
# See https://github.com/docker/buildx#documentation for in-depth explaination.

# The repository path to use for all images when building, defaults to local.
# Override to push to your choosen remote repository.
docker.repository=local

# Tags to add to all images, can be overridden on a project by project basis.
# if unspecified latest is used.
docker.tags=latest

# The driver to use for the build, either "docker", "docker-container", or
# "kubernetes". Note that "docker" only supports "inline" cache mode and does
# *not* support multi-arch builds.
#
# Using 'docker-container' with a local repository requires that the following 
# is set in your /etc/docker/daemon.json file.
# {
#  "insecure-registries" : ["http://isle-buildkit.registry"],
# }
docker.driver=docker

# Conditionally allows pushing when `docker.driver` is set to `docker`. If we
# are building with "docker-container" or "kubernetes" we must push as we need
# to be able to pull from from the registry when building downstream images.
docker.push=false

# Enable caching from/to remote/inline cache.
# These flags are forced to "false" if `docker.noCache` is set to "true".
# Defaults to the following depending on `docker.driver`:
docker.cacheFrom=true
docker.cacheTo=false

# The cache mode to use, either "max", "min", "inline".
# When `docker.driver` is set to "docker" only "inline" is valid.
# Defaults to the following depending on `docker.driver`:
#   - "docker" -> "inline"
#   - "docker-container" -> "max"
#   - "kubernetes" -> "max"
#
# docker.cacheToMode=

# The remote repository (v2) to use as a cache for images when building.
# Override to pull / push from your private remote repository cache.
#   - `docker.cacheFromRepositories` will default to `islandora` and the value of
#      the `docker.repository` property if set.
#   - `docker.cacheToRepositories` will default to the value of the `docker.repository`
#      property if set and "docker.cacheToMode" is set to "min" or "max".
#      it will use the tag ":cache" for storage.
# Both values are comma seperated lists.
#
#docker.cacheFromRepositories=
#docker.cacheToRepositories=

# The local/remote build cache can be disabled for debugging purposes.
# This disables `docker.cacheFrom` and `docker.cacheTo` as well as the
# local buildkit cache.
docker.noCache=false

# The platforms to build images for, If unspecified it will target the
# host platform. It is possible to target multiple platforms as builder
# will use emulation for architectures that do no match the host.
# Note this is not supported when `docker.driver` is set to "docker".
#
# docker.platforms=linux/amd64,linux/arm64
