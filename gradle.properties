# ==============================================================================
# Gradle properties.
org.gradle.caching=true
org.gradle.parallel=true

# ==============================================================================
# Docker properties.
# See https://github.com/docker/buildx#documentation for in-depth explaination.

# The repository path to use for all images when building, defaults to local.
# Override to push to your choosen remote repository.
docker.repository=local

# Tags to add to all images, can be overridden on a project by project basis.
# if unspecified latest is used.
docker.tags=latest

# The driver to use for the build, either "docker", "docker-container", or
# "kubernetes". Note that "docker" only supports "inline" cache mode and does
# *not* support multi-arch builds.
docker.driver=docker

# Enable caching from/to remote/inline cache.
# These flags are forced to "false" if `docker.noCache` is set to "true".
# Defaults to the following depending on `docker.driver`:
docker.cacheFrom=true
docker.cacheTo=false

# The cache mode to use, either "max", "min", "inline".
# When `docker.driver` is set to "docker" only "inline" is valid.
# Defaults to the following depending on `docker.driver`:
#   - "docker" -> "inline"
#   - "docker-container" -> "max"
#   - "kubernetes" -> "max"
#
# docker.cacheToMode=

# The remote repository (v2) to use as a cache for images when building.
# Override to pull / push from your private remote repository cache.
#   - `docker.cacheFromRepositories` will default to `islandora` and the value of
#      the `docker.repository` property if set.
#   - `docker.cacheToRepositories` will default to the value of the `docker.repository`
#      property if set and "docker.cacheToMode" is set to "min" or "max".
#      it will use the tag ":cache" for storage.
# Both values are comma seperated lists.
#
#docker.cacheFromRepositories=
#docker.cacheToRepositories=

# The local/remote build cache can be disabled for debugging purposes.
# This disables `docker.cacheFrom` and `docker.cacheTo` as well as the
# local buildkit cache.
docker.noCache=false

# The platforms to build images for, If unspecified it will target the
# host platform. It is possible to target multiple platforms as builder
# will use emulation for architectures that do no match the host.
# Note this is not supported when `docker.driver` is set to "docker".
#
# docker.platforms=linux/amd64,linux/arm64
