# =============================================================================
# For all of the properties listed in this file the default is given.
# You can override them on the command line using `-Pproperty.name=value`
#
# Or alternatively you can customize the values in your ~/.gradle/gradle.properties
# file.

# =============================================================================
# Gradle properties.
org.gradle.caching=true
org.gradle.parallel=true

# =============================================================================
# Grype properties.
# See https://github.com/anchore/grype for in-depth explaination.

# Used to ignore specific vunerabilities.
isle.grype.config=grype.yaml

# Only included vunerabilities that have known fixes in the report.
isle.grype.only-fixed=false

# Upon scanning, if a severity is found at or above the given severity then the
# command will fail. The default is unset which will skip this validation.
#
# Options:
# - negligible
# - low
# - medium
# - high
# - critical
isle.grype.fail-on-severity=

# The format of reports generated by grype, which can be found in:
# `build/{image-name}/{image-name}-grype.{ext}`:
#
# Options:
# - table: A columnar summary (default).
# - cyclonedx: An XML report conforming to the CycloneDX 1.2 specification.
# - json: Use this to get as much information out of Grype as possible!
# - template: Lets the user specify the output format. See "Using templates"
#             <https://github.com/anchore/grype>.
isle.grype.format=table

# =============================================================================
# Buildkit properties.
#
# Configuration for buildkit daemon used to build images.

# The driver to use for the build, either:
# - docker (Only supports "inline" cache mode and does not support multi-arch builds.)
# - docker-container
# - kubernetes (Not implemented)
isle.build.driver=docker
isle.build.driver.docker-container.name=isle-buildkit
isle.build.driver.docker-container.image=moby/buildkit:v0.11.1

# Only applies to linux hosts, Docker Desktop comes bundled with Qemu.
# Allows us to build cross platform images by emulating the target platform.
isle.build.qemu.image=tonistiigi/binfmt:qemu-v7.0.0-28

# The registry/repository to use when building/pushing images.
#
# To use the local registry set it to the same value as 'isle.local.registry.domain'.
# isle.build.registry.host=islandora.io
isle.build.registry=islandora

# Pushing may require logging in to the repository, if so these need to be populated.
# The local registry does not require credentials.
isle.build.registry.host=docker.io
isle.build.registry.user=
isle.build.registry.password=

# The target(s) or group(s) to build from the docker-bake.hcl file.
isle.build.targets=default

# Comma delimited list of tags to use when when building/pushing images.
# If an empty string is given a number of tags will be generated automatically.
isle.build.tags=local

# Add the architecture of the image as a suffix to the tag, i.e. `local-amd54`
# If building multiple architectures this is forced to true.
isle.build.tags.add.arch.suffix=false

# Push to remote cache when building (requires authentication).
isle.build.push.to.remote.cache=false

# Load images after building (into the local docker context).
isle.build.load=true

# Push images after building (you cannot push and load at the same time).
isle.build.push=false

# The platform(s) to build images for, If unspecified it will target the
# host platform.
#
# Only the following values are supported:
# isle.build.platforms=linux/amd64,linux/arm64
isle.build.platforms=

# If not provided the timestamp of the git commit is used.
#
# https://reproducible-builds.org/docs/source-date-epoch/
#
# Force to the start of unix time. Affects the reproduciablity of builds.
isle.build.source.date.epoch=0

# =============================================================================
# Cache properties.
#
# Enable at most one export cache, multiple export caches are not supported.
# @see https://github.com/moby/buildkit#cache

# Inline
# Embed the cache into the image, and push them to the registry together.

# Enable inline cache import/export.
isle.build.cache.inline.enable.import=false
isle.build.cache.inline.enable.export=false

# Same credentials are used for pushing.

# Registry
# Push the image and the cache separately

# Enable registry cache import/export.
isle.build.cache.registry.enable.import=true
isle.build.cache.registry.enable.export=false

# The repository to push/pull image cache to/from.
# Only pushed when built via Github Actions.
# isle.build.cache.registry.repository defaults to the same value as
# isle.build.registry if not given.
isle.build.cache.registry.repository=
isle.build.cache.registry.image=cache

# Specify cache layers to export
# - min: only export layers for the resulting image
# - max: export all the layers of all intermediate steps
isle.build.cache.registry.mode=max

# Compression type for layers newly created and cached.
# estargz should be used with oci-mediatypes=true.
isle.build.cache.registry.compression=estargz

# Compression level for gzip, estargz (0-9) and zstd (0-22)
isle.build.cache.registry.compression-level=5

# Required to write, but not read from the cache.
isle.build.cache.registry.user=
isle.build.cache.registry.password=

# Local
# Export to a local directory

# Enable local cache import/export.
isle.build.cache.local.enable.import=false
isle.build.cache.local.enable.export=false

# Specify cache layers to export
# - min: only export layers for the resulting image
# - max: export all the layers of all intermediate steps
isle.build.cache.local.mode=max

# Compression type for layers newly created and cached.
# estargz should be used with oci-mediatypes=true.
isle.build.cache.local.compression=estargz

# Compression level for gzip, estargz (0-9) and zstd (0-22)
isle.build.cache.local.compression-level=5

# GitHub Actions
# Export to GitHub Actions cache.
# @see https://github.com/moby/buildkit#github-actions-cache-experimental

# Enable GHA cache import/export.
isle.build.cache.gha.enable.import=false
isle.build.cache.gha.enable.export=false

# Specify cache layers to export
# - min: only export layers for the resulting image
# - max: export all the layers of all intermediate steps
isle.build.cache.gha.mode=max

# S3 (or compatible)
# Stores metadata and layers in s3 bucket.
# Requires Buildkit v0.11.0-rc1 or later

# Enable s3 cache import/export.
isle.build.cache.s3.enable.import=false
isle.build.cache.s3.enable.export=false

# The location to push/pull cache from.
isle.build.cache.s3.region=us-east-1
isle.build.cache.s3.bucket=isle-build-cache
isle.build.cache.s3.endpoint_url=https://nyc3.digitaloceanspaces.com

# Specify cache layers to export
# - min: only export layers for the resulting image
# - max: export all the layers of all intermediate steps
isle.build.cache.s3.mode=max

# Required to read/write the cache.
isle.build.cache.s3.access_key_id=
isle.build.cache.s3.secret_access_key=

# =============================================================================
# Local Registry properties.
#

# It's important to note that weâ€™re using a domain containing a "." here, i.e.
# localhost.domain. If it were missing Docker would believe that localhost is a
# username, as in localhost/ubuntu. It would then try to push to the default
# Central Registry rather than our local repository. islandora.dev makes for a
# good default as we can generate certificates for it and avoid many problems.
#
# If isle.build.registry is set to the same value as here it will be used when
# isle.build.push is true.
isle.local.registry.domain=islandora.io
isle.local.registry.port=443
isle.local.registry.bind.port=false

# Registry container properties.
isle.local.registry.container=isle-registry
isle.local.registry.network=isle-registry
isle.local.registry.volume=isle-registry
isle.local.registry.image=registry:2

# =============================================================================
# DockerHub properties.
#
# To modifiy resources in DockerHub we require the user to authenticate.

# Required for deleting inactive tags.
isle.dockerhub.user=
isle.dockerhub.personal.access.token=

# The repository to remove tags from.
isle.dockerhub.repository=islandora

# Only remove tags that are marked as "Inactive" i.e have not been
# pulled in over 6 months.
isle.dockerhub.remove.inactive.only=true

# Additional tags aside from branches and tags in the repository to prevent the deletion of.
# List of values separated by comma.
isle.dockerhub.protected.tags=
